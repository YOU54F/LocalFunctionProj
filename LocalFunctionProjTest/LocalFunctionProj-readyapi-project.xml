<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="1348d15f-7683-4f81-8319-640f4f5b8fbe" created="3.41.1" activeEnvironment="Default environment" name="LocalFunctionProj" updated="3.41.1 2022-09-28T09:40:46Z" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:testSuite id="fb193065-e2c0-4710-ac75-e678d7ddcec7" name="LocalFunctionProj">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="c5a93bb5-fce5-4c58-a9d2-ad24e2eedc35" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="LocalFunctionProjTest" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="httprequest" name="HttpExample" id="f9e7964f-1f87-405e-8962-32dd1dd55bbf">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" id="61b96636-3acf-47b3-ac2e-6860fc2f2389" name="HttpExample" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://localhost:7071/api/HttpExample</con:endpoint>
          <con:request/>
          <con:assertion type="DataAndMetadataAssertion" id="50066fe4-864e-42ef-8e27-53b50a374044" name="Smart Assertion">
            <con:configuration xsi:type="con:DataAndMetadataAssertion">
              <con:mode>Received Data</con:mode>
              <con:elements>
                <con:path>//data[1]</con:path>
                <con:element>data</con:element>
                <con:operatorId>1</con:operatorId>
                <con:enabled>true</con:enabled>
                <con:expectedValue>Hello, Functions. This HTTP triggered function executed successfully.</con:expectedValue>
                <con:caseSensitive>true</con:caseSensitive>
                <con:numberType>false</con:numberType>
              </con:elements>
              <con:elements>
                <con:path>//data[1]/@contentType</con:path>
                <con:element>@contentType</con:element>
                <con:operatorId>1</con:operatorId>
                <con:enabled>true</con:enabled>
                <con:expectedValue>text/plain; charset=utf-8</con:expectedValue>
                <con:caseSensitive>true</con:caseSensitive>
                <con:numberType>false</con:numberType>
              </con:elements>
              <con:elements>
                <con:path>//data[1]/@contentLength</con:path>
                <con:element>@contentLength</con:element>
                <con:operatorId>1</con:operatorId>
                <con:enabled>false</con:enabled>
                <con:expectedValue>69</con:expectedValue>
                <con:caseSensitive>true</con:caseSensitive>
                <con:numberType>false</con:numberType>
              </con:elements>
              <con:originalMessage>&lt;data contentType="text/plain; charset=utf-8" contentLength="69">&lt;![CDATA[Hello, Functions. This HTTP triggered function executed successfully.]]&gt;&lt;/data></con:originalMessage>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:parameter required="true">
              <con:name>name</con:name>
              <con:value>Functions</con:value>
              <con:style>QUERY</con:style>
              <con:default>Functions</con:default>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
          </con:parameters>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:properties/>
    <con:reportParameters/>
  </con:testSuite>
  <con:requirements/>
  <con:properties/>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:reporting>
    <con:reportTemplates/>
    <con:xmlTemplates/>
    <con:xmlTemplates/>
    <con:parameters/>
    <con:parameters/>
  </con:reporting>
  <con:reporting/>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:authRepository/>
  <con:tags/>
</con:soapui-project>
